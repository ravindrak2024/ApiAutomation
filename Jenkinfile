pipeline {
agent any
    parameters {
            choice(
                name: 'TESTS',
                choices:"All\nHWMS tests\nMensa Functional\nMensa Integration",
                description: "Which tests to run ")
            choice(
                name: 'ENVIRONMENT',
                choices:"eu_prod\nus_prod",
                description: "Environment of the tests" )
            string(
                name: 'TESTRAIL_RUN_NAME',
                defaultValue:"JenkinTestRun",
                description: "Test rail testrun name")
            booleanParam(
                name: 'SKIP_BUILD',
                defaultValue: false,
                description: 'Skips build pipenv setup')
    }
   stages {
	stage('Clone'){
		steps{
		git branch: 'master',
    			     credentialsId: '4106b794-381e-4bb0-aa2f-5021943c2ea1',
                             url: 'https://github.com/ravindrab5/ApiAutomation.git'
		}
         }

   stage('Build'){
			steps{
			script{
			if (SKIP_BUILD == true) { return }

            sh 'python -m pip install pipenv'
            sh 'python -m pipenv install --ignore-pipfile'
			}
			}
  }
stage('Run Tests'){
			steps{
			script{
			switch(TESTS){

            case "All":
                sh 'python -m pipenv run pytest scripts -v --env=${ENVIRONMENT} --junitxml=result.xml --testrail --tr-config=testrail.cfg --tr-testrun-name=${TESTRAIL_RUN_NAME}'
                break
            case "HWMS tests":
                sh 'python -m pipenv run pytest scripts -m hwms_functional -v --env=${ENVIRONMENT} --junitxml=result.xml --testrail --tr-config=testrail.cfg --tr-testrun-name=${TESTRAIL_RUN_NAME}'
                break
            case "Mensa Functional":
                sh 'python -m pipenv run pytest scripts -m mensa_functional -v --env=${ENVIRONMENT} --junitxml=result.xml --testrail --tr-config=testrail.cfg --tr-testrun-name=${TESTRAIL_RUN_NAME}'
                break
            case "Mensa Integration":
                sh 'python -m pipenv run pytest scripts -m mensa_integration -v --env=${ENVIRONMENT} --junitxml=result.xml --testrail --tr-config=testrail.cfg --tr-testrun-name=${TESTRAIL_RUN_NAME}'
                break

            }
            }
        	}
  }
  
}
post {
  always {
    junit "**/result.xml"
  }
}
}
